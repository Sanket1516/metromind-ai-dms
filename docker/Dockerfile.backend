# MetroMind Backend Production Dockerfile
# Optimized for performance and security

FROM python:3.11-slim as base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Create non-root user
RUN groupadd -r metromind && useradd -r -g metromind metromind

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    libpq-dev \
    libmagic1 \
    tesseract-ocr \
    tesseract-ocr-eng \
    poppler-utils \
    && rm -rf /var/lib/apt/lists/*

# Build stage
FROM base as builder

# Install Poetry
RUN pip install poetry

# Set work directory
WORKDIR /build

# Copy dependency files
COPY pyproject.toml poetry.lock* ./

# Configure poetry
RUN poetry config virtualenvs.create false

# Install dependencies
RUN poetry install --no-dev --no-interaction --no-ansi

# Production stage
FROM base as production

# Create directories
RUN mkdir -p /app/data/uploads /app/data/logs /app/data/temp && \
    chown -R metromind:metromind /app

# Set work directory
WORKDIR /app

# Copy installed packages from builder
COPY --from=builder /usr/local/lib/python3.11/site-packages /usr/local/lib/python3.11/site-packages
COPY --from=builder /usr/local/bin /usr/local/bin

# Copy application code
COPY --chown=metromind:metromind . .

# Create optimized Python bytecode
RUN python -m compileall -b .

# Install additional ML models and data
RUN python -c "\
import spacy; \
import nltk; \
try: \
    spacy.cli.download('en_core_web_sm'); \
    nltk.download('punkt'); \
    nltk.download('stopwords'); \
    nltk.download('wordnet'); \
except Exception as e: \
    print(f'Warning: Could not download ML models: {e}'); \
"

# Health check script
COPY docker/healthcheck.sh /usr/local/bin/healthcheck.sh
RUN chmod +x /usr/local/bin/healthcheck.sh

# Switch to non-root user
USER metromind

# Expose port
EXPOSE 8010

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD /usr/local/bin/healthcheck.sh

# Start command
CMD ["python", "start_services.py"]