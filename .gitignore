# Virtual environments
.venv/
venv/
env/
ENV/
env.bak/
venv.bak/

# Python cache files
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
*.egg-info/
dist/
build/

# Node.js dependencies and build outputs
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity

# Build directories
build/
dist/
.next/
out/

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
*.env

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.history/*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# Testing and coverage
.coverage
.pytest_cache/
*.cover
coverage.xml
*.log
test-results/
playwright-report/
logs/

# Temporary files
*.tmp
*.temp
.cache/
*.pid
*.seed
*.pid.lock
tmp/
temp/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Local Netlify folder
.netlify

# Database files (if any local development databases)
*.db
*.sqlite
*.sqlite3

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
Pipfile.lock

# poetry
poetry.lock

# pdm
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Docker
.dockerignore

# Flask instance folder
instance/

# Scrapy stuff
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# mkdocs documentation
/site

# ========================================
# METROMIND PROJECT - COMPREHENSIVE .gitignore
# ========================================
# This file ensures sensitive data, build artifacts, and development files
# are not accidentally committed while preserving all essential source code.

# ---------------------------------------
# VIRTUAL ENVIRONMENTS & DEPENDENCIES
# ---------------------------------------

# Python virtual environments
.venv/
venv/
env/
ENV/
env.bak/
venv.bak/

# Python cache and build files
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
*.egg-info/
dist/
build/

# Node.js dependencies and build outputs
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.npm
.yarn-integrity

# Build directories (React, Next.js, etc.)
build/
.next/
out/
.nuxt

# ---------------------------------------
# ENVIRONMENT & CONFIGURATION FILES
# ---------------------------------------

# Environment variables (CRITICAL - contains sensitive data)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
*.env

# Note: Keep .tsx, .ts, .js source files - these are your app's core code
# frontend/src/**/*.tsx    ← TRACKED (React components)
# frontend/src/**/*.ts     ← TRACKED (TypeScript services)
# frontend/src/**/*.js     ← TRACKED (JavaScript files)

# ---------------------------------------
# DEVELOPMENT & IDE FILES
# ---------------------------------------

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.history/*

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# ---------------------------------------
# TESTING & QUALITY ASSURANCE
# ---------------------------------------

# Testing and coverage
.coverage
.pytest_cache/
*.cover
coverage.xml
*.log
test-results/
playwright-report/
logs/

# ---------------------------------------
# TEMPORARY & CACHE FILES
# ---------------------------------------

# Temporary files
*.tmp
*.temp
.cache/
*.pid
*.seed
*.pid.lock
tmp/
temp/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache
.parcel-cache

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# ---------------------------------------
# FRAMEWORK SPECIFIC
# ---------------------------------------

# Local Netlify folder
.netlify

# Database files (if any local development databases)
*.db
*.sqlite
*.sqlite3

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# Python version managers
.python-version

# Package managers
Pipfile.lock
poetry.lock
.pdm.toml

# PEP 582
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# Type checkers
.mypy_cache/
.dmypy.json
dmypy.json
.pyre/

# Docker
.dockerignore

# Flask instance folder
instance/

# Scrapy stuff
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# mkdocs documentation
/site

# ---------------------------------------
# RUNTIME DATA
# ---------------------------------------

# Runtime data
pids/
*.pid
*.seed
*.pid.lock

# ========================================
# PROJECT SPECIFIC NOTES
# ========================================
#
# ✅ TRACKED FILES (Essential source code):
#    - All .tsx files (React components)
#    - All .ts files (TypeScript services)
#    - All .py files (Python backend)
#    - Configuration: package.json, requirements.txt
#    - Documentation: README.md, ARCHITECTURE.md
#
# ❌ IGNORED FILES (Development artifacts):
#    - node_modules/, build/, .env files
#    - IDE settings, cache files, logs
#    - OS-specific files, temporary files
#
# ========================================
